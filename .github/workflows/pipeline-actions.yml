name: Build & Test WebGoat
on:
    workflow_call: #llamada para poder ser usado en otros repositorios
      inputs:
        java-v:
          description: "Java Version Required" #es obligatorio que se introduzca como parámetro la versión de java requerida
          required: true
          type: string
      secrets:
        SEMGREP_APP_TOKEN:
          description: "SemGrep Token Required"
          required: true


jobs:
    build:
        name: "Build"
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout Code"
              run: git clone https://github.com/${{ github.repository }}.git . #clonamos el repositorio que queremos construir aquí, y evitamos el uso de actions/checkout@v4

            - name: "Setup Java"
              uses: actions/setup-java@v4.2.1
              with:
                  distribution: 'temurin'
                  java-version: 23
                  architecture: x64
                  cache: 'maven'


            - name: "Build with Maven"
              run: ./mvnw clean install #Construir la aplicación
              continue-on-error: false #Si falla, se detiene el pipeline

    sast:
      name: "SAST - Semgrep"
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: "Checkout Code"
          run: git clone https://github.com/${{ github.repository }}.git . #clonamos el repositorio que queremos construir aquí, y evitamos el uso de actions/checkout@v4
        - name: "Run Semgrep"
          run: |
            docker run -e SEMGREP_APP_TOKEN=${{ secrets.SEMGREP_APP_TOKEN }} --rm -v $(pwd):/src semgrep/semgrep semgrep ci
          continue-on-error: false

    test:
        name: "Test"
        runs-on: ubuntu-latest
        needs: sast #El job sólo se ejecutará si build fue correctamente ejecutado
        steps:
            - name: "Checkout Code"
              run: git clone https://github.com/${{ github.repository }}.git .

            - name: "Setup Java"
              uses: actions/setup-java@v4.2.1
              with:
                  distribution: 'temurin'
                  java-version: ${{ inputs.java-v }}
                  architecture: x64
                  cache: 'maven'

            - name: "Run Tests with Maven"
              run: ./mvnw test #Para ejecutar las pruebas unitarias
              continue-on-error: false
    dast:
      name: "DAST - OWASP ZAP"
      runs-on: ubuntu-latest
      needs: sca
      steps:
        - name: "Run OWASP ZAP"
          run: |
            docker run --rm \
            -v $(pwd):/zap/wrk/:rw \
            -t zaproxy/zap-stable zap-sh
          continue-on-error: false

    sca:
      name: "SCA - OWASP Dependency-Check"
      runs-on: ubuntu-latest
      needs: test
      steps:
        - name: "Crear Directorio de Datos"
          run: mkdir -p /tmp/dependency-check-data

        - name: "Verificar Archivos en el Contenedor"
          run: docker run --rm --volume $(pwd):/src owasp/dependency-check ls -l /src

        - name: "Ejecutar OWASP Dependency-Check"
          run:
            docker run --rm \
            --volume $(pwd):/src \
            owasp/dependency-check \
            --scan /src/target \
            --out /src/dependency-check-report.html \
            --failOnCVSS 7 \
            -n
          continue-on-error: false
